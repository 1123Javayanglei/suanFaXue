
【编程题】

    这是一个纵横火柴棒游戏。如图[1.jpg]，在一个3x4的方格中，游戏的双方轮流放置火柴棒。其规则是：

    1. 不能放置在已经放置火柴棒的地方（即只能在空格中放置）。

    2. 火柴棒的方向只能是垂直或水平放置。

    3. 火柴棒不能与其它格子中的火柴“连通”。所谓连通是指两根火柴棒可以连成一条直线，且中间没有其它不同方向的火柴“阻拦”。

    例如：图[1.jpg]所示的局面下，可以在C2位置竖直放置，但不能水平放置，因为会与A2连通。同样道理，B2，B3，D2此时两种方向都不可以放置。但如果C2竖直放置后，D2就可以水平放置了，因为不再会与A2连通（受到了C2的阻挡）。

    4. 游戏双方轮流放置火柴，不可以弃权，也不可以放多根。直到某一方无法继续放置，则该方为负（输的一方）。

    游戏开始时可能已经放置了多根火柴。

    你的任务是：编写程序，读入初始状态，计算出对自己最有利的放置方法并输出。

    如图[1.jpg]的局面表示为：

00-1
-000
0100

    即用“0”表示空格位置，用“1”表示竖直放置，用“-”表示水平放置。

【输入、输出格式要求】
  
    用户先输入整数 n(n<100), 表示接下来输入 n 种初始局面，每种局面占3行(多个局面间没有空行)。

    程序则输出对应的每种初始局面，计算出的最佳走法（行号+列号+放置方式）。

    例如：用户输入：
2
0111
-000
-000
1111
----
0010

   则程序可以输出：
00-
211

   输出结果的含义为：
   
   对第一个局面，在第0行第0列水平放置
   
   对第二个局面，在第2行第1列垂直放置

   注意：
   
   行号、列号都是从0开始计数的。
       
   对每种局面可能有多个最佳放置方法（解不唯一），只输出一种即可。

   例如，对第一个局面，001 也是正解；最第二个局面，201也是正解。
