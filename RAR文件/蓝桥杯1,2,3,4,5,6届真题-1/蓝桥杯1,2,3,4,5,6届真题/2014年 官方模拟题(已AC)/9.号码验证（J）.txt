/*
1、从卡号最后一位数字开始，逆向将奇数位(1、3、5等等)相加。
2、从卡号最后一位数字开始，逆向将偶数位数字，先乘以2（如果乘积为两位数，则将其减去9），再求和。
3、将奇数位总和加上偶数位总和，结果应该可以被10整除。
例如，卡号是：5432123456788881
则奇数、偶数位（用红色标出）分布：5432123456788881
奇数位和=35
偶数位乘以2（有些要减去9）的结果：1 6 2 6 1 5 7 7，求和=35。
最后35+35=70 可以被10整除，认定校验通过。

请编写一个程序，从键盘输入卡号，然后判断是否校验通过。通过显示："成功"，否则显示"失败"。
比如，用户输入：356827027232780
程序输出：成功
*/
#include<stdio.h>
#include<string.h>
main()
{
	char str[30];
	int str1[30]={0};
	int n,st;
	int i;
	int sum=0;
	scanf("%s",str);
//	printf("%c,%c",str[0],str[1]);
	n=strlen(str);
	st=n;
	//将字符串按对应数字赋值到整形数组，并按对应整数保存
	while(n--)
	str1[n]=str[n]=='1'?1:str[n]=='2'?2:str[n]=='3'?3:str[n]=='4'?4:str[n]=='5'?5:str[n]=='6'?6:str[n]=='7'?7:str[n]=='8'?8:str[n]=='9'?9:0;
//	printf("%d,%d\n",str1[0],str1[1]);printf("%d,%d\n",str1[2],str1[3]);printf("%d,%d\n",str1[4],str1[5]);printf("%d,%d\n",str1[6],str1[7]);//检测是否赋值成功 
//	printf("%d\n",st);//检测几位数字 
	if(st%2==0)
	{
		for(i=st-2;i>=0;i=i-2)
		{
			if(str1[i]*2>9)
			sum+=(str1[i]*2-9);
			else
			sum+=str1[i]*2;
//			printf("%d\n",sum);//中间数据 
		}
//		printf("%d\n",sum);//偶数和 
		for(i=st-1;i>0;i=i-2)
		sum+=str1[i];
//		printf("%d\n",sum);//总和 
	}
	else
	{
		for(i=st-1;i>=0;i=i-2)
		sum+=str1[i];
//		printf("%d\n",sum);//奇数和 
		for(i=st-2;i>0;i=i-2)
		{
			if(str1[i]*2>9)
			sum+=(str1[i]*2-9);
			else
			sum+=str1[i]*2;
		}
//		printf("%d\n",sum);//总和 
	}
	if(sum%10==0)
	printf("成功\n");
	else
	printf("失败\n");
	return 0;
}